// Code generated by hertz generator.

package api

import (
	api "DY_BAT/cmd/api/biz/model/api"
	"DY_BAT/cmd/api/biz/rpc"
	"DY_BAT/cmd/user/kitex_gen/user"
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// UserRegister .
// @router /douyin/user/register/ [POST]
func UserRegister(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinUserRegisterRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	var msg string
	resp := &api.DouyinUserRegisterResponse{BaseResp: &api.BaseResp{StatsuMsg: &msg}}
	username := c.Query("username")
	password := c.Query("password")

	//
	userResp, _ := rpc.RegisterUser(ctx, &user.DouyinUserRegisterRequest{
		Username: username,
		Password: password,
	})
	resp.BaseResp.StatsuMsg = userResp.BaseResp.StatsuMsg
	resp.BaseResp.StatusCode = userResp.BaseResp.StatusCode
	resp.Token = userResp.Token
	resp.UserID = userResp.UserId
	////
	c.JSON(consts.StatusOK, resp)
}

// UserLogin .
// @router /douyin/user/login/ [POST]
func UserLogin(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinUserLoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.DouyinUserLoginResponse)

	c.JSON(consts.StatusOK, resp)
}

// UserInfo .
// @router /douyin/user/ [GET]
func UserInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.DouyinUserResponse)

	c.JSON(consts.StatusOK, resp)
}
